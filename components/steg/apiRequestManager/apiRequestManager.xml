<?xml version = "1.0" encoding = "utf-8" ?>

<component name="ApiRequestManager" extends="Task">

	<interface>
        <!--
            Request Object
                possible values:
                    context                     - Any data that you would like passed along with the request (keep it to a minimal amount of data)
                    converResponseToNode String - The name of the Node to convert the response object to
                    headers AssocArray          - The http headers sent with the request
                    host String                 - The request host
                    log Boolean                 - Turns logging on/off.  Defaults to false
                    requestId String            - Unique id of the request.  Automatically generated if not provided
                    type String                 - HTTP type (GET, POST, PUT, DELETE)
                    url String                  - the path to the resource
                    validate Boolean            - Turns on/off the http validation.  Default is true
        -->
		<field id="request" type="assocarray" />

        <!--
            Response Object
        -->
		<field id="response" type="assocarray" />

        <!--
            Response Error Code
        -->
		<field id="responseErrorCode" type="integer" />
        
        <!--
            sets the http version to use for all requests.
        -->
        <field id="httpVersion" type="string" />

        <!--
            number of urlTransfer objects to create for connection pooling.
        -->
        <field id="poolSize" type="integer" value="5" />

        <!--
            certificate file that should be used for all requests
        -->
        <field id="certificatesFile" type="string" value="common:/certs/ca-bundle.crt" />
	</interface>

  	<children>
		<Timer
			duration="10"
			repeat="false"
			id="timerCleanup" />
	</children>

    <script type="text/brightscript" uri="apiRequestManager.brs" />
</component>
